#version: '3.8'
#
#services:
#  product-service:
#    container_name: product-service
#    image: ${DOCKER_REGISTRY-}product-service
#    build:
#      context: .
#      dockerfile: Product-Service/Dockerfile
#    depends_on:
#      - mongo
#    networks:
#      - amazinnetwork
#
#  mongo:
#    image: mongo:latest
#    restart: unless-stopped
#    container_name: mongoproductservice
#    ports:
#      - "27020:27020"
#    command: ["mongod", "--port", "27020"]
#    volumes:
#      - mongo-data:/data/db
#    networks:
#      - amazinnetwork
#
#  amazingateaway:
#    container_name: amazingateaway
#    image: amazingateaway
#    build:
#      context: .
#      dockerfile: AmazinGateaway/Dockerfile
#    ports:
#      - "8001:8080"
#    networks:
#      - amazinnetwork
#  
#  userservice:
#    container_name: userservice
#    image: userservice
#    build:
#      context: .
#      dockerfile: UserService/Dockerfile
#    ports:
#      - "8002:80"
#    networks:
#      - amazinnetwork
#
#networks:
#  amazinnetwork:
#    driver: bridge
#
#volumes:
#  mongo-data:



version: '3.8'

services:
  product-service:
    container_name: product-service
    image: dentabramasta/product-service:v1
    build:
      context: ./Product-Service
      dockerfile: Dockerfile
    depends_on:
      - mongo
    networks:
      - amazinnetwork

  mongo:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongoproductservice
    ports:
      - "27020:27020"
    command: ["mongod", "--port", "27020"]
    volumes:
      - mongo-data:/data/db
    networks:
      - amazinnetwork

  mongouserservice: 
    image: mongo:latest
    restart: unless-stopped
    container_name: mongouserservice
    ports:
      - "27021:27021"
    command: ["mongod", "--port", "27021"]
    volumes:
      - mongouserservice-data:/data/db
    networks:
      - amazinnetwork

  amazingateaway:
    container_name: amazingateaway
    image: dentabramasta/amazingateaway:v1
    build:
      context: ./AmazinGateaway
      dockerfile: Dockerfile
    ports:
      - "8001:8080"
    networks:
      - amazinnetwork
  
  userservice:
    container_name: user-service
    image: dentabramasta/user-service:v1
    build:
      context: ./User-Service
      dockerfile: Dockerfile
    depends_on:
      - mongouserservice
    networks:
      - amazinnetwork

networks:
  amazinnetwork:
    driver: bridge

volumes:
  mongo-data:
  mongouserservice-data:
